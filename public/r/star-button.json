{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "star-button",
  "type": "registry:component",
  "title": "Github Star Button",
  "description": "A simple github star button component",
  "files": [
    {
      "path": "registry/default/components/star-button/star-button.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"motion/react\";\nimport { IconBrandGithub } from \"@tabler/icons-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function GithubStarButton({\n  owner,\n  repo,\n  className,\n}: {\n  owner: string;\n  repo: string;\n  className?: string;\n}) {\n  const [stars, setStars] = useState<number | null>(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    async function fetchStars() {\n      try {\n        const res = await fetch(\n          `https://api.github.com/repos/${owner}/${repo}`,\n        );\n        if (!res.ok) return;\n        const data = await res.json();\n        setStars(data.stargazers_count);\n      } catch (err) {\n        console.error(\"Failed to fetch stars:\", err);\n      }\n    }\n    fetchStars();\n  }, [owner, repo]);\n\n  function formatStars(num: number) {\n    if (num >= 1000) return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\n    return num.toString();\n  }\n\n  return (\n    <motion.a\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      href={`https://github.com/${owner}/${repo}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      className={cn(\n        \"group relative inline-flex items-center gap-2 overflow-hidden rounded-lg border bg-neutral-900 px-5 py-2.5 text-neutral-300 shadow-md transition-all duration-300 hover:text-white hover:shadow-[-8px_-8px_40px_2px_rgba(0,0,0,0.25)] dark:hover:shadow-[-8px_-8px_40px_2px_rgba(255,255,255,0.15)]\",\n        className,\n      )}\n    >\n      {/* shadow */}\n      <div className=\"absolute inset-x-0 bottom-0 h-1 w-full bg-gradient-to-t from-neutral-200 via-neutral-50/40 to-transparent blur-[4px] dark:from-neutral-800 dark:via-neutral-500/50\" />\n      <div className=\"absolute inset-y-0 right-0 w-1 bg-gradient-to-l from-neutral-100 via-neutral-100/50 to-transparent blur-[4px] dark:from-neutral-700 dark:via-neutral-500/50\" />\n      <div className=\"absolute inset-y-0 left-0 w-1 bg-gradient-to-r from-neutral-100 via-neutral-100/50 to-transparent blur-[4px] dark:from-neutral-700 dark:via-neutral-500/50\" />\n      <div className=\"absolute inset-x-0 top-0 h-1 w-full bg-gradient-to-b from-neutral-200 via-neutral-50/40 to-transparent blur-[4px] dark:from-neutral-800 dark:via-neutral-500/50\" />\n\n      {/* Animated star */}\n      <HoverStar isHovered={isHovered} />\n\n      <span\n        className={cn(\n          \"font-medium tracking-tight text-neutral-300\",\n          isHovered ? \"text-white\" : \"\",\n        )}\n      >\n        Star us on\n      </span>\n      <IconBrandGithub className=\"size-5\" strokeWidth={1.8} />\n\n      {/* Star count */}\n      {stars !== null && (\n        <motion.span\n          key={stars} // ensures animation runs on change\n          initial={{ opacity: 0, y: -6, scale: 0.8 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{ type: \"spring\", stiffness: 400, damping: 15 }}\n          className=\"ml-2 rounded-md border border-yellow-500/20 bg-yellow-500/5 px-2 py-1 text-xs font-semibold text-yellow-500\"\n        >\n          {formatStars(stars)}\n        </motion.span>\n      )}\n    </motion.a>\n  );\n}\n\nconst HoverStar = ({ isHovered }: { isHovered: boolean }) => {\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 24 24\"\n      fill={isHovered ? \"oklch(92.4% 0.12 95.746)\" : \"white\"}\n      transition={{ duration: 0.6, ease: \"easeInOut\" }}\n      stroke={isHovered ? \"oklch(85.2% 0.199 91.936)\" : \"white\"}\n      strokeWidth=\"1.2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"drop-shadow\"\n    >\n      <motion.path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <motion.path\n        animate={{ pathLength: isHovered ? 1 : 0 }}\n        transition={{ duration: 0.6, ease: \"easeInOut\" }}\n        d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867\n           l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1\n           l-5 4.867l1.179 6.873z\"\n      />\n    </motion.svg>\n  );\n};\n",
      "type": "registry:component"
    }
  ]
}