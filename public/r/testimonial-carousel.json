{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonial-carousel",
  "type": "registry:component",
  "title": "Testimonial Carousel",
  "description": "A simple testimonial carousel component",
  "files": [
    {
      "path": "registry/default/components/testimonial-carousel/testimonial-carousel.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport { IconChevronLeft, IconChevronRight } from \"@tabler/icons-react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  text: string;\n  avatar?: string;\n}\n\nconst variants = {\n  enter: (direction: number) => ({\n    x: direction > 0 ? 100 : -100,\n    opacity: 0,\n    scale: 0.95,\n    filter: \"blur(10px)\",\n  }),\n  center: {\n    x: 0,\n    opacity: 1,\n    scale: 1,\n    filter: \"blur(0px)\",\n  },\n  exit: (direction: number) => ({\n    x: direction > 0 ? -100 : 100,\n    opacity: 0,\n    scale: 0.95,\n    filter: \"blur(10px)\",\n  }),\n};\n\n/* -------------------- Subcomponents -------------------- */\n\nexport function TestimonialCard({\n  testimonial,\n  direction,\n  className,\n}: {\n  testimonial: Testimonial;\n  direction: number;\n  className?: string;\n}) {\n  return (\n    <motion.div\n      key={testimonial.id}\n      custom={direction}\n      variants={variants}\n      initial=\"enter\"\n      animate=\"center\"\n      exit=\"exit\"\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n      className={cn(\"p-4\", className)}\n    >\n      <TestimonialText testimonial={testimonial} />\n      <div className=\"mt-4 flex items-center gap-4\">\n        {testimonial.avatar ? (\n          <TestimonialAvatar testimonial={testimonial} />\n        ) : (\n          <div className=\"size-10 rounded-full bg-neutral-800 dark:bg-neutral-200\" />\n        )}\n        <div className=\"flex flex-col\">\n          <span className=\"font-semibold text-neutral-900 dark:text-neutral-100\">\n            {testimonial.name}\n          </span>\n          <span className=\"text-sm text-neutral-500 dark:text-neutral-400\">\n            {testimonial.role}\n          </span>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport function TestimonialText({\n  testimonial,\n  className,\n}: {\n  testimonial: Testimonial;\n  className?: string;\n}) {\n  return (\n    <p\n      className={cn(\n        \"leading-relaxed text-neutral-700 dark:text-neutral-300\",\n        className,\n      )}\n    >\n      &quot; {testimonial.text} &quot;\n    </p>\n  );\n}\n\nexport function TestimonialAvatar({\n  testimonial,\n  className,\n}: {\n  testimonial: Testimonial;\n  className?: string;\n}) {\n  return (\n    <motion.img\n      src={testimonial.avatar}\n      alt={testimonial.name}\n      className={cn(\"size-10 rounded-full object-cover\", className)}\n    />\n  );\n}\n\nexport function TestimonialName({\n  testimonial,\n  className,\n}: {\n  testimonial: Testimonial;\n  className?: string;\n}) {\n  return (\n    <span\n      className={cn(\n        \"font-semibold text-neutral-900 dark:text-neutral-100\",\n        className,\n      )}\n    >\n      {testimonial.name}\n    </span>\n  );\n}\n\nexport function TestimonialRole({\n  testimonial,\n  className,\n}: {\n  testimonial: Testimonial;\n  className?: string;\n}) {\n  return (\n    <span\n      className={cn(\n        \"text-sm text-neutral-500 dark:text-neutral-400\",\n        className,\n      )}\n    >\n      {testimonial.role}\n    </span>\n  );\n}\n\nexport function TestimonialNav({\n  onPrev,\n  onNext,\n}: {\n  onPrev: () => void;\n  onNext: () => void;\n}) {\n  return (\n    <div className=\"mt-4 flex items-center justify-end gap-4\">\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={onPrev}\n        className=\"rounded-md border border-neutral-200 bg-white p-2 shadow-md dark:border-neutral-800 dark:bg-neutral-800\"\n      >\n        <IconChevronLeft className=\"h-5 w-5 text-neutral-700 dark:text-neutral-300\" />\n      </motion.button>\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={onNext}\n        className=\"rounded-md border border-neutral-200 bg-white p-2 shadow-md dark:border-neutral-800 dark:bg-neutral-800\"\n      >\n        <IconChevronRight className=\"h-5 w-5 text-neutral-700 dark:text-neutral-300\" />\n      </motion.button>\n    </div>\n  );\n}\n\n/* -------------------- Main Carousel -------------------- */\n\nexport function TestimonialCarousel({\n  testimonials,\n  className,\n}: {\n  testimonials: Testimonial[];\n  className?: string;\n}) {\n  const [[index, direction], setIndex] = useState<[number, number]>([0, 0]);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    if (isHovered) return;\n    const timer = setInterval(() => {\n      setIndex(([prev]) => [(prev + 1) % testimonials.length, 1]);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [isHovered, testimonials.length]);\n\n  const next = () =>\n    setIndex(([prev]) => [(prev + 1) % testimonials.length, 1]);\n  const prev = () =>\n    setIndex(([prev]) => [\n      (prev - 1 + testimonials.length) % testimonials.length,\n      -1,\n    ]);\n\n  return (\n    <motion.div\n      layout\n      className={cn(\"relative mx-auto max-w-xl p-6\", className)}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <motion.div className=\"overflow-hidden rounded-md border bg-neutral-50 p-4 text-black dark:bg-neutral-900 dark:text-white\">\n        <AnimatePresence mode=\"wait\" custom={direction}>\n          <TestimonialCard\n            testimonial={testimonials[index]}\n            direction={direction}\n          />\n        </AnimatePresence>\n      </motion.div>\n\n      <TestimonialNav onPrev={prev} onNext={next} />\n    </motion.div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}