{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "social-share",
  "type": "registry:component",
  "title": "Social Share",
  "description": "A simple social share component",
  "files": [
    {
      "path": "registry/default/components/social-share/social-share.tsx",
      "content": "\"use client\";\n\nimport { JSX, useState } from \"react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport Link from \"next/link\";\nimport {\n  IconBrandGithub,\n  IconBrandLinkedin,\n  IconBrandX,\n  IconMail,\n} from \"@tabler/icons-react\";\n\ntype Platform = \"github\" | \"linkedin\" | \"twitter\" | \"email\";\n\ninterface SocialLinksProps {\n  profiles?: Partial<Record<Platform, string>>;\n  showTooltip?: boolean;\n  size?: number;\n}\n\nconst PLATFORM_META: Record<\n  Platform,\n  {\n    name: string;\n    icon: (size: number) => JSX.Element;\n    color: string;\n  }\n> = {\n  github: {\n    name: \"GitHub\",\n    icon: (size) => <IconBrandGithub size={size} />,\n    color: \"#000000\",\n  },\n  twitter: {\n    name: \"Twitter\",\n    icon: (size) => <IconBrandX size={size} />,\n    color: \"#000000\",\n  },\n  linkedin: {\n    name: \"LinkedIn\",\n    icon: (size) => <IconBrandLinkedin size={size} />,\n    color: \"#0B66C2\",\n  },\n  email: {\n    name: \"Email\",\n    icon: (size) => <IconMail size={size} />,\n    color: \"#EA4335\",\n  },\n};\n\nexport default function SocialLinks({\n  profiles = {\n    github: \"https://github.com/m-sanjid\",\n    twitter: \"https://x.com/sanjid357\",\n    linkedin: \"https://linkedin.com/in/muhammedsanjid1\",\n    email: \"mailto:sanjid.dev@gmail.com\",\n  },\n  showTooltip = true,\n  size = 20,\n}: SocialLinksProps) {\n  const [hoverIndex, setHoverIndex] = useState<number | null>(null);\n\n  const activeLinks = Object.entries(profiles).map(([key, url]) => {\n    const platform = key as Platform;\n    const meta = PLATFORM_META[platform];\n    return {\n      ...meta,\n      url,\n    };\n  });\n\n  return (\n    <div className=\"flex flex-wrap justify-center gap-3\">\n      {activeLinks.map((item, index) => (\n        <motion.div\n          key={item.name}\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: index * 0.1 }}\n          className=\"relative\"\n        >\n          <Link href={item.url!} target=\"_blank\" rel=\"noopener noreferrer\">\n            <motion.div\n              whileHover={{\n                scale: 1.1,\n                backgroundColor: item.color,\n                color: \"#ffffff\",\n              }}\n              whileTap={{ scale: 0.95 }}\n              onMouseEnter={() => setHoverIndex(index)}\n              onMouseLeave={() => setHoverIndex(null)}\n              className=\"rounded-full bg-black/10 p-3 backdrop-blur-sm transition-all hover:shadow-lg dark:bg-white/10\"\n            >\n              {item.icon(size)}\n            </motion.div>\n          </Link>\n\n          <AnimatePresence>\n            {showTooltip && hoverIndex === index && (\n              <motion.div\n                initial={{ opacity: 0, y: 5, scale: 0.95 }}\n                animate={{ opacity: 1, y: -5, scale: 1 }}\n                exit={{ opacity: 0, y: 5, scale: 0.95 }}\n                transition={{ duration: 0.2 }}\n                className=\"absolute -top-10 left-1/2 z-10 -translate-x-1/2 rounded-md bg-black px-3 py-1 text-xs text-white shadow-md backdrop-blur-sm dark:bg-white dark:text-black\"\n              >\n                {item.name}\n                <div className=\"absolute -bottom-1 left-1/2 h-2 w-2 -translate-x-1/2 rotate-45 bg-black dark:bg-white\" />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}