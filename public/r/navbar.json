{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar",
  "type": "registry:component",
  "title": "Navbar",
  "description": "A simple navbar component",
  "files": [
    {
      "path": "registry/default/components/navbar/navbar.tsx",
      "content": "\"use client\";\n\nimport Link from \"next/link\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { useState, useEffect } from \"react\";\nimport { usePathname } from \"next/navigation\";\nimport { IconX, IconMenu, IconSun, IconMoon } from \"@tabler/icons-react\";\nimport { useTheme } from \"next-themes\";\n\nexport function Navbar({\n  navItems = NavItems,\n}: {\n  navItems?: { href: string; label: string }[];\n}) {\n  const [scrolled, setScrolled] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [hoveredIdx, setHoveredIdx] = useState<number | null>(null);\n  const [mounted, setMounted] = useState(false);\n\n  const pathname = usePathname();\n\n  useEffect(() => {\n    setMounted(true);\n    const handleScroll = () => setScrolled(window.scrollY > 10);\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const isActive = (href: string) =>\n    pathname === href || pathname.startsWith(href + \"/\");\n\n  return (\n    <motion.nav\n      className={`sticky z-50 mx-auto w-full transition-all duration-300 ${\n        scrolled\n          ? \"border-border bg-background/80 top-3 max-w-4xl rounded-2xl border px-6 shadow-md backdrop-blur-lg\"\n          : \"top-0 max-w-6xl bg-white dark:bg-black\"\n      }`}\n    >\n      <div className=\"container mx-auto flex h-16 items-center justify-between px-4 lg:px-6\">\n        {/* Logo */}\n        {/* change to / while using  */}\n        <Link href=\"\" className=\"text-foreground text-lg font-bold\">\n          Logo\n        </Link>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden items-center md:flex\">\n          <div\n            onMouseLeave={() => setHoveredIdx(null)}\n            className=\"flex items-center gap-1 rounded-xl border border-neutral-200 bg-neutral-100 p-1 backdrop-blur-sm dark:border-neutral-700 dark:bg-neutral-800\"\n          >\n            {navItems.map((item, idx) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className=\"group relative rounded-lg px-4 py-2 text-sm font-medium transition-all\"\n                onMouseEnter={() => setHoveredIdx(idx)}\n              >\n                <motion.span\n                  className={`relative z-10 ${\n                    isActive(item.href)\n                      ? \"text-foreground\"\n                      : \"text-muted-foreground group-hover:text-foreground\"\n                  }`}\n                >\n                  {item.label}\n                </motion.span>\n\n                {hoveredIdx === idx && (\n                  <motion.div\n                    layoutId=\"hover-pill\"\n                    className=\"absolute inset-0 rounded-lg bg-white dark:bg-black\"\n                    transition={{ type: \"spring\", stiffness: 400, damping: 30 }}\n                  />\n                )}\n\n                {isActive(item.href) && (\n                  <motion.div\n                    layoutId=\"active-pill\"\n                    className=\"absolute inset-0 rounded-lg bg-white shadow-sm dark:bg-black\"\n                    transition={{ type: \"spring\", stiffness: 400, damping: 30 }}\n                  />\n                )}\n              </Link>\n            ))}\n          </div>\n        </nav>\n\n        {/* Desktop Actions */}\n        <div className=\"hidden items-center gap-4 md:flex\">\n          <ThemeToggle mounted={mounted} />\n          <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.97 }}>\n            <Link\n              href=\"#\"\n              className=\"rounded-[12px] bg-black px-4 py-2 text-sm font-medium dark:bg-white\"\n            >\n              <span className=\"text-white dark:text-black\">Sign In</span>\n            </Link>\n          </motion.div>\n        </div>\n\n        {/* Mobile Actions */}\n        <div className=\"flex items-center gap-2 md:hidden\">\n          <ThemeToggle mounted={mounted} />\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"border-border bg-muted/50 rounded-xl border p-2.5 backdrop-blur-sm transition-all\"\n            aria-label=\"Toggle menu\"\n          >\n            <AnimatePresence mode=\"wait\">\n              <motion.div\n                key={mobileMenuOpen ? \"close\" : \"open\"}\n                initial={{ opacity: 0, rotate: -90 }}\n                animate={{ opacity: 1, rotate: 0 }}\n                exit={{ opacity: 0, rotate: 90 }}\n                transition={{ duration: 0.2 }}\n              >\n                {mobileMenuOpen ? (\n                  <IconX className=\"h-5 w-5\" />\n                ) : (\n                  <IconMenu className=\"h-5 w-5\" />\n                )}\n              </motion.div>\n            </AnimatePresence>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Mobile Menu */}\n      <AnimatePresence>\n        {mobileMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3, ease: \"easeOut\" }}\n            className=\"border-border bg-background/95 border-t shadow-lg backdrop-blur-xl md:hidden\"\n          >\n            <nav className=\"container mx-auto space-y-1 px-4 py-6\">\n              {navItems.map((item, index) => (\n                <motion.div\n                  key={item.href}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.08, duration: 0.3 }}\n                >\n                  <Link\n                    href={item.href}\n                    className={`block rounded-lg px-4 py-3 text-sm font-medium ${\n                      isActive(item.href)\n                        ? \"bg-accent text-accent-foreground\"\n                        : \"text-muted-foreground hover:bg-muted/70 hover:text-foreground\"\n                    }`}\n                    onClick={() => setMobileMenuOpen(false)}\n                  >\n                    {item.label}\n                  </Link>\n                </motion.div>\n              ))}\n\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: navItems.length * 0.1, duration: 0.3 }}\n                className=\"pt-4\"\n              >\n                <Link\n                  href=\"#\"\n                  className=\"rounded-[12px] bg-white px-4 py-2 text-sm font-medium dark:bg-black\"\n                  onClick={() => setMobileMenuOpen(false)}\n                >\n                  Sign In\n                </Link>\n              </motion.div>\n            </nav>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.nav>\n  );\n}\n\n/* --- Theme Toggle --- */\nconst ThemeToggle = ({ mounted }: { mounted: boolean }) => {\n  const { theme, setTheme } = useTheme();\n  if (!mounted) return null;\n\n  return (\n    <motion.button\n      layout\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n      className=\"rounded-[12px] border border-neutral-300 bg-black/10 p-2.5 backdrop-blur-sm transition-all dark:border-neutral-700 dark:bg-white/10\"\n      aria-label=\"Toggle theme\"\n    >\n      {theme === \"dark\" ? (\n        <IconMoon className=\"size-4\" />\n      ) : (\n        <IconSun className=\"size-4\" />\n      )}\n    </motion.button>\n  );\n};\n\nconst NavItems = [\n  { href: \"#projects\", label: \"Projects\" },\n  { href: \"#services\", label: \"Services\" },\n  { href: \"#pricing\", label: \"Pricing\" },\n  { href: \"#blog\", label: \"Blog\" },\n  { href: \"#contact\", label: \"Contact\" },\n];\n",
      "type": "registry:component"
    }
  ]
}