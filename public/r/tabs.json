{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs",
  "type": "registry:component",
  "title": "Tabs",
  "description": "A simple tabs component",
  "files": [
    {
      "path": "registry/default/ui/tabs/tabs.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport clsx from \"clsx\";\n\ninterface Tab {\n  value: string;\n  label: string;\n  content: React.ReactNode;\n}\n\ninterface TabsProps {\n  tabs: Tab[];\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  className?: string;\n}\n\nexport function Tabs({\n  tabs,\n  defaultValue,\n  onValueChange,\n  className,\n}: TabsProps) {\n  const [activeTab, setActiveTab] = useState(defaultValue || tabs[0].value);\n  const tabRefs = useRef<Record<string, HTMLButtonElement | null>>({});\n\n  useEffect(() => {\n    onValueChange?.(activeTab);\n  }, [activeTab]);\n\n  const activeRect = tabRefs.current[activeTab]?.getBoundingClientRect();\n\n  return (\n    <div className={clsx(\"w-full\", className)}>\n      {/* Tab List */}\n      <div className=\"relative flex gap-1 overflow-x-auto rounded-lg border bg-white p-1 dark:border-neutral-800 dark:bg-neutral-900\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.value}\n            ref={(el) => {\n              if (el) {\n                tabRefs.current[tab.value] = el;\n              }\n            }}\n            onClick={() => setActiveTab(tab.value)}\n            className={clsx(\n              \"relative z-10 px-4 py-2 text-sm font-medium whitespace-nowrap transition-colors\",\n              activeTab === tab.value\n                ? \"text-black dark:text-white\"\n                : \"text-neutral-500 hover:text-black dark:text-neutral-400 dark:hover:text-white\",\n            )}\n          >\n            {tab.label}\n          </button>\n        ))}\n\n        {/* Animated Indicator */}\n        <AnimatePresence>\n          {activeRect && (\n            <motion.div\n              layout\n              className=\"absolute bottom-0 z-0 h-[2px] rounded bg-black dark:bg-white\"\n              style={{\n                left:\n                  activeRect.left -\n                  tabRefs.current[tabs[0].value]!.getBoundingClientRect().left,\n                width: activeRect.width,\n              }}\n              layoutId=\"tab-indicator\"\n              transition={{ type: \"spring\", bounce: 0.2, duration: 0.3 }}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"mt-4\">\n        <AnimatePresence mode=\"wait\" initial={false}>\n          {tabs.map(\n            (tab) =>\n              tab.value === activeTab && (\n                <motion.div\n                  key={tab.value}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  transition={{ duration: 0.25 }}\n                >\n                  {tab.content}\n                </motion.div>\n              ),\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}